version: '3'
services:

  app:
    build:
      context: .
      dockerfile: ./docker/php.Dockerfile
    image: php:latest
    container_name: ${APP_NAME}
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: ${APP_NAME}
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - backend

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    environment:
    - VIRTUAL_PORT=80
    - VIRTUAL_HOST=project.local
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - backend

  mysql:
    image: mysql:8.0.20
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: ${DEFAULT_ENV}
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql-files/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    depends_on:
      - mysql
    ports:
      - 4001:8080

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
     - PMA_ARBITRARY=1
    restart: always
    ports:
     - 4002:80
    volumes:
     - /sessions
    depends_on:
      - mysql

networks:
  backend:
    driver: bridge

volumes:
  dbdata:
    driver: local
